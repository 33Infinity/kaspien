{"version":3,"sources":["controls/Confirmation.tsx","controls/CSVFileUploader.tsx","models/Error.ts","models/Product.ts","utils/String.ts","requests/Base.ts","requests/Endpoints.ts","requests/HttpMethods.ts","requests/Product.ts","services/Product.ts","services/Base.ts","components/Product.tsx","components/App.tsx","index.tsx"],"names":["confirmWithSingleButton","aButtonConfirmLabel","aTitle","aMessage","a","result","confirmAlert","title","message","buttons","label","onClick","CSVFileUploader","fileUploadCallBack","csv","require","target","files","size","name","endsWith","reader","FileReader","addEventListener","event","parseCsv","removeEventListener","readAsText","someText","fromString","jsonObj","console","log","type","accept","onChange","Tooltip","htmlFor","IconButton","color","aria-label","component","Error","ErrorMessage","this","Product","anASIN","aPrice","aMargin","ASIN","Title","Price","Margin","String","aValue","Base","aUrl","aRequesObject","fetch","response","json","ErrorModel","New","anHttpMethod","someData","method","body","JSON","stringify","Endpoints","add","getAll","HttpMethods","get","post","put","delete","someProductModels","url","requestObject","buildRequestObject","getJson","someJson","products","length","i","product","buildProduct","push","ProductRequest","isApiError","ProductModel","errorMessage","validate","StringUtil","nullOrEmpty","isNaN","Number","marginWithoutPercentage","slice","Grid","container","spacing","direction","item","xs","sm","Typography","variant","App","useEffect","getProducts","useState","setProducts","ProductService","retrievedProducts","map","eachProduct","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEO,SAAeA,EAAtB,sC,4CAAO,WACLC,EACAC,EACAC,GAHK,eAAAC,EAAA,6DAKDC,GAAS,EALR,SAMCC,uBAAa,CACjBC,MAAOL,EACPM,QAASL,EACTM,QAAS,CACP,CACEC,MAAOT,EACPU,QAAS,kBAAM,UAZhB,gCAgBEN,GAhBF,4C,qCCoDQO,EA9C0B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACpCC,EAAMC,EAAQ,IAD+C,4CAEnE,+BAAAX,EAAA,0DACY,QADkBY,EAA9B,EAA8BA,cAClB,IAANA,OAAA,EAAAA,EAAQC,MAAM,GAAGC,MAAO,KAE1BlB,EAAwB,KAAM,QAAS,6BAEpCgB,EAAOC,MAAM,GAAGE,KAAKC,SAAS,QALrC,uBAMIpB,EAAwB,KAAM,QAAS,qBAN3C,kBAOW,IAPX,QASQqB,EAAS,IAAIC,YACZC,iBACL,QACA,SAACC,GAAD,aAAWC,EAAQ,OAACD,QAAD,IAACA,GAAD,UAACA,EAAOR,cAAR,aAAC,EAAeX,WACnC,GAEFgB,EAAOK,oBACL,QACA,SAACF,GAAD,aAAWC,EAAQ,OAACD,QAAD,IAACA,GAAD,UAACA,EAAOR,cAAR,aAAC,EAAeX,WACnC,GAEFgB,EAAOM,WAAWX,EAAOC,MAAM,IApBjC,4CAFmE,+BAyBpDQ,EAzBoD,8EAyBnE,WAAwBG,GAAxB,eAAAxB,EAAA,sEACwBU,IAAMe,WAAWD,GADzC,OACQE,EADR,OAEEC,QAAQC,IAAIF,GACZjB,EAAmBiB,GAHrB,4CAzBmE,sBA8BnE,OACE,gCACE,uBAAOG,KAAK,OAAOC,OAAO,OAAOC,SAhC8B,8CAiC/D,cAACC,EAAA,EAAD,CAAS7B,MAAM,eAAf,SACE,uBAAO8B,QAAQ,YAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,iBACXC,UAAU,iB,uCC9CDC,E,WAGnB,WAAoBvC,GAAmB,yBAFvCwC,kBAEsC,EACpCC,KAAKD,aAAexC,E,4CAMtB,SAAkBA,GAChB,OAAO,IAAIuC,EAAMvC,O,KCXA0C,E,WAMnB,WACEC,EACA5C,EACA6C,EACAC,GACC,yBAVHC,UAUE,OATFC,WASE,OARFC,WAQE,OAPFC,YAOE,EACAR,KAAKK,KAAOH,EACZF,KAAKM,MAAQhD,EACb0C,KAAKO,MAAQJ,EACbH,KAAKQ,OAASJ,E,4CAShB,SACEF,EACA5C,EACA6C,EACAC,GAEA,OAAO,IAAIH,EAAQC,EAAQ5C,EAAQ6C,EAAQC,O,KC9B1BK,E,gGACnB,SAAmBC,GACjB,MAAqB,oBAAVA,IAAyBA,M,KCAnBC,E,mIACnB,WAAqBC,EAAcC,GAAnC,qFAGyB,MAAjBA,EAHR,gCAIuBC,MAAMF,GAJ7B,OAIMG,EAJN,8CAMuBD,MAAMF,EAAMC,GANnC,OAMME,EANN,gCAQuBA,EAASC,OARhC,eAQUA,EARV,yBASWA,GATX,2DAWWC,EAAWC,IAAX,OAXX,0D,yFAeA,SAA0BC,EAAuBC,GAC/C,MAAO,CACLC,OAAQF,EACRG,KAAMC,KAAKC,UAAUJ,Q,KCrBNK,E,kCAAAA,EACZxB,S,wCACSyB,IAAM,qC,EACNC,OAAS,qC,OCHNC,E,kCAAAA,EACLC,IAAM,MADDD,EAELE,KAAO,OAFFF,EAGLG,IAAM,MAHDH,EAILI,OAAS,S,ICEJ/B,E,qMACnB,WAAiBgC,GAAjB,kFACMC,EAAMT,EAAUxB,QAAQyB,IACtBS,EAAgBnC,KAAKoC,mBACzBR,EAAYE,KACZG,GAJJ,SAMqBjC,KAAKqC,QAAQH,EAAKC,GANvC,cAMQnB,EANR,yBAOSA,GAPT,gD,kHAUA,6FACMkB,EAAMT,EAAUxB,QAAQ0B,OAD9B,SAEqB3B,KAAKqC,QAAQH,EAAK,MAFvC,cAEQlB,EAFR,yBAGSA,GAHT,gD,2DAXmCL,GCAhBV,E,qMACnB,WAAwBqC,GAAxB,gFACQC,EAA2B,GACT,IAApBD,EAASE,OAFf,yCAGWvB,EAAWC,IAAI,2BAH1B,OAKWuB,EAAI,EALf,YAKkBA,EAAIH,EAASE,QAL/B,uBAMUE,EAAU1C,KAAK2C,aAAaL,EAASG,eACpBxB,GAP3B,yCAQayB,GARb,OAUIH,EAASK,KAAKF,GAVlB,OAKuCD,IALvC,wCAYqBI,EAAenB,IAAIa,GAZxC,WAYQvB,EAZR,QAaMhB,KAAK8C,WAAW9B,GAbtB,0CAcWC,EAAWC,IAAIF,EAAKjB,eAd/B,iCAgBS,MAhBT,iD,kHAmBA,wGACqB8C,EAAelB,SADpC,UAEe,QADPX,EADR,iDAE4B,IAF5B,OAIE,IADMuB,EAA2B,GACxBE,EAAI,EAAGA,EAAIzB,EAAKwB,OAAQC,IAC/BF,EAASK,KACPG,EAAa7B,IACXF,EAAKyB,GAAL,KACAzB,EAAKyB,GAAL,MACAzB,EAAKyB,GAAL,MACAzB,EAAKyB,GAAL,SAVR,yBAcSF,GAdT,2C,gFAiBA,SAAoBD,GAClB,IAAMU,EAAehD,KAAKiD,SAASX,GACnC,OAAKY,EAAWC,YAAYH,GAGrBD,EAAa7B,IAClBoB,EAAQ,KACRA,EAAQ,MACRA,EAAQ,MACRA,EAAS,eANFrB,EAAWC,IAAI8B,K,sBAU1B,SAAwBV,GACtB,GAAIY,EAAWC,YAAYb,EAAQ,MACjC,MAAO,uBAET,GAAIY,EAAWC,YAAYb,EAAQ,OACjC,MAAO,8BAET,GAAIY,EAAWC,YAAYb,EAAQ,OACjC,MAAO,wBAET,GAAIc,MAAMC,OAAOf,EAAQ,QACvB,MAAM,GAAN,OAAUA,EAAQ,MAAlB,wBAEF,GAAIY,EAAWC,YAAYb,EAAS,eAClC,MAAO,yBAET,IAAMgB,EAA0BhB,EAAS,cAAciB,MAAM,GAAI,GACjE,OAAIL,EAAWC,YAAYG,GAClB,yBAELF,MAAMC,OAAOC,IACT,GAAN,OAAUA,EAAV,yBAEK,O,kGC9ET,SAAkBhB,GAChB,OAAmB,MAAZA,GAA6C,MAAzBA,EAASvC,iB,sBCoCzBE,EA7BkB,SAAC,GAAiB,IAAfyC,EAAc,EAAdA,QAClC,OACE,8BACE,eAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAtC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CAAYlE,UAAU,KAAKmE,QAAQ,KAAnC,SACGtB,EAAQrC,SAGb,cAACmD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CAAYlE,UAAU,KAAKmE,QAAQ,KAAnC,SACGtB,EAAQpC,UAGb,cAACkD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CAAYlE,UAAU,KAAKmE,QAAQ,KAAnC,oBACOtB,EAAQnC,WAGjB,cAACiD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CAAYlE,UAAU,KAAKmE,QAAQ,KAAnC,mBACMtB,EAAQlC,OADd,eCQKyD,EA5BO,WACpBC,qBAAU,WACRC,MACC,IAHuB,MAIMC,mBAAyB,IAJ/B,mBAInB7B,EAJmB,KAIT8B,EAJS,cAKXF,IALW,2EAK1B,4BAAA3G,EAAA,sEACkC8G,EAAe3C,SADjD,OACQ4C,EADR,OAEEF,EAAYE,GAFd,4CAL0B,kEAS1B,WAA4BjC,GAA5B,eAAA9E,EAAA,sEACyB8G,EAAe5C,IAAIY,GAD5C,QACQC,EADR,kBAE0BtB,EACtB7D,EAAwB,KAAM,QAASmF,EAASxC,eAEhD3C,EAAwB,KAAM,UAAW,+BACzC+G,KANJ,4CAT0B,sBAkB1B,OACE,gCACE,cAAC,EAAD,CAAiBlG,mBApBK,8CAqBrBsE,EAASiC,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAS/B,QAAS+B,WC3BjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e237af4.chunk.js","sourcesContent":["import { confirmAlert } from \"react-confirm-alert\";\r\n\r\nexport async function confirmWithSingleButton(\r\n  aButtonConfirmLabel: string,\r\n  aTitle: string,\r\n  aMessage: string\r\n) {\r\n  let result = false;\r\n  await confirmAlert({\r\n    title: aTitle,\r\n    message: aMessage,\r\n    buttons: [\r\n      {\r\n        label: aButtonConfirmLabel,\r\n        onClick: () => null,\r\n      },\r\n    ],\r\n  });\r\n  return result;\r\n}\r\n","import React from \"react\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { confirmWithSingleButton } from \"./Confirmation\";\r\n\r\ninterface Props {\r\n  fileUploadCallBack: any;\r\n}\r\n\r\nconst CSVFileUploader: React.FC<Props> = ({ fileUploadCallBack }) => {\r\n  const csv = require(\"csvtojson\");\r\n  async function handleUpload({ target }: any) {\r\n    if (target?.files[0].size > 1000) {\r\n      //Totally random size to be too big\r\n      confirmWithSingleButton(\"Ok\", \"Error\", \"File is too large to read\");\r\n    }\r\n    if (!target.files[0].name.endsWith(\".csv\")) {\r\n      confirmWithSingleButton(\"Ok\", \"Error\", \"File must be .csv\");\r\n      return \"\";\r\n    }\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      (event) => parseCsv(event?.target?.result),\r\n      false\r\n    );\r\n    reader.removeEventListener(\r\n      \"load\",\r\n      (event) => parseCsv(event?.target?.result),\r\n      true\r\n    );\r\n    reader.readAsText(target.files[0]);\r\n  }\r\n\r\n  async function parseCsv(someText: any) {\r\n    const jsonObj = await csv().fromString(someText);\r\n    console.log(jsonObj);\r\n    fileUploadCallBack(jsonObj);\r\n  }\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleUpload}></input>\r\n      <Tooltip title=\"Select Image\">\r\n        <label htmlFor=\"faceImage\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          ></IconButton>\r\n        </label>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSVFileUploader;\r\n","export default class Error {\r\n  ErrorMessage: string;\r\n\r\n  private constructor(aMessage: string) {\r\n    this.ErrorMessage = aMessage;\r\n  }\r\n\r\n  /**\r\n   * @param aMessage error message to display\r\n   */\r\n  public static New(aMessage: string): Error {\r\n    return new Error(aMessage);\r\n  }\r\n}\r\n","export default class Product {\r\n  ASIN: string;\r\n  Title: string;\r\n  Price: string;\r\n  Margin: string;\r\n\r\n  private constructor(\r\n    anASIN: string,\r\n    aTitle: string,\r\n    aPrice: string,\r\n    aMargin: string\r\n  ) {\r\n    this.ASIN = anASIN;\r\n    this.Title = aTitle;\r\n    this.Price = aPrice;\r\n    this.Margin = aMargin;\r\n  }\r\n\r\n  /**\r\n   * @param anASIN uniquely identifies product\r\n   * @param aTitle description of product\r\n   * @param aPrice price of product\r\n   * @param aMargin margin of product\r\n   */\r\n  public static New(\r\n    anASIN: string,\r\n    aTitle: string,\r\n    aPrice: string,\r\n    aMargin: string\r\n  ): Product {\r\n    return new Product(anASIN, aTitle, aPrice, aMargin);\r\n  }\r\n}\r\n","export default class String {\r\n  static nullOrEmpty(aValue: any) {\r\n    if (typeof aValue != \"undefined\" && aValue) return false;\r\n    return true;\r\n  }\r\n}\r\n","import ErrorModel from \"../models/Error\";\r\n\r\nexport default class Base {\r\n  static async getJson(aUrl: string, aRequesObject: any) {\r\n    try {\r\n      let response;\r\n      if (aRequesObject == null) {\r\n        response = await fetch(aUrl);\r\n      } else {\r\n        response = await fetch(aUrl, aRequesObject);\r\n      }\r\n      const json = await response.json();\r\n      return json;\r\n    } catch (exception) {\r\n      return ErrorModel.New(exception);\r\n    }\r\n  }\r\n\r\n  static buildRequestObject(anHttpMethod: unknown, someData: unknown) {\r\n    return {\r\n      method: anHttpMethod,\r\n      body: JSON.stringify(someData),\r\n    };\r\n  }\r\n}\r\n","export default class Endpoints {\r\n  static Product = class {\r\n    public static add = \"http://localhost/kaspien/index.php\";\r\n    public static getAll = \"http://localhost/kaspien/index.php\";\r\n  };\r\n}\r\n","export default class HttpMethods {\r\n  public static get = \"GET\";\r\n  public static post = \"POST\";\r\n  public static put = \"PUT\";\r\n  public static delete = \"DELETE\";\r\n}\r\n","import Base from \"./Base\";\r\nimport ProductModel from \"../models/Product\";\r\nimport Endpoints from \"../requests/Endpoints\";\r\nimport HttpMethods from \"../requests/HttpMethods\";\r\nimport { getAllJSDocTags } from \"typescript\";\r\n\r\nexport default class Product extends Base {\r\n  static async add(someProductModels: ProductModel[]) {\r\n    let url = Endpoints.Product.add;\r\n    const requestObject = this.buildRequestObject(\r\n      HttpMethods.post,\r\n      someProductModels\r\n    );\r\n    const json = await this.getJson(url, requestObject);\r\n    return json;\r\n  }\r\n\r\n  static async getAll() {\r\n    let url = Endpoints.Product.getAll;\r\n    const json = await this.getJson(url, null);\r\n    return json;\r\n  }\r\n}\r\n","import ErrorModel from \"../models/Error\";\r\nimport ProductModel from \"../models/Product\";\r\nimport StringUtil from \"../utils/String\";\r\nimport ProductRequest from \"../requests/Product\";\r\nimport Base from \"./Base\";\r\n\r\nexport default class Product extends Base {\r\n  public static async add(someJson: any): Promise<ErrorModel | null> {\r\n    const products: ProductModel[] = [];\r\n    if (someJson.length === 0) {\r\n      return ErrorModel.New(\"File contained no data\");\r\n    }\r\n    for (let i = 0; i < someJson.length; i++) {\r\n      const product = this.buildProduct(someJson[i]);\r\n      if (product instanceof ErrorModel) {\r\n        return product;\r\n      }\r\n      products.push(product);\r\n    }\r\n    const json = await ProductRequest.add(products);\r\n    if (this.isApiError(json)) {\r\n      return ErrorModel.New(json.ErrorMessage);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static async getAll(): Promise<ProductModel[]> {\r\n    const json = await ProductRequest.getAll();\r\n    if (json === null) return [];\r\n    const products: ProductModel[] = [];\r\n    for (let i = 0; i < json.length; i++) {\r\n      products.push(\r\n        ProductModel.New(\r\n          json[i][\"asin\"],\r\n          json[i][\"title\"],\r\n          json[i][\"price\"],\r\n          json[i][\"margin\"]\r\n        )\r\n      );\r\n    }\r\n    return products;\r\n  }\r\n\r\n  static buildProduct(someJson: any): ProductModel | ErrorModel {\r\n    const errorMessage = this.validate(someJson);\r\n    if (!StringUtil.nullOrEmpty(errorMessage)) {\r\n      return ErrorModel.New(errorMessage);\r\n    }\r\n    return ProductModel.New(\r\n      someJson[\"ASIN\"],\r\n      someJson[\"Title\"],\r\n      someJson[\"Price\"],\r\n      someJson[\"Net Margin\"]\r\n    );\r\n  }\r\n\r\n  private static validate(someJson: any): string {\r\n    if (StringUtil.nullOrEmpty(someJson[\"ASIN\"])) {\r\n      return \"ASIN cannot be empty\";\r\n    }\r\n    if (StringUtil.nullOrEmpty(someJson[\"Title\"])) {\r\n      return \"Description cannot be empty\";\r\n    }\r\n    if (StringUtil.nullOrEmpty(someJson[\"Price\"])) {\r\n      return \"Price cannot be empty\";\r\n    }\r\n    if (isNaN(Number(someJson[\"Price\"]))) {\r\n      return `${someJson[\"Price\"]} is an invalid price`;\r\n    }\r\n    if (StringUtil.nullOrEmpty(someJson[\"Net Margin\"])) {\r\n      return \"Margin cannot be empty\";\r\n    }\r\n    const marginWithoutPercentage = someJson[\"Net Margin\"].slice(0, -1); //Trim last character\r\n    if (StringUtil.nullOrEmpty(marginWithoutPercentage)) {\r\n      return \"Margin cannot be empty\";\r\n    }\r\n    if (isNaN(Number(marginWithoutPercentage))) {\r\n      return `${marginWithoutPercentage} is an invalid margin`;\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n","export default class Base {\r\n  static isApiError(someJson: any) {\r\n    return someJson != null && someJson.ErrorMessage != null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ProductModel from \"../models/Product\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface Props {\r\n  product: ProductModel;\r\n}\r\n\r\nconst Product: React.FC<Props> = ({ product }) => {\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2} direction=\"row\">\r\n        <Grid item xs={12} sm={2}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {product.ASIN}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {product.Title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {`$${product.Price}`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={1}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {`${product.Margin}%`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect, useState } from \"react\";\nimport CSVFileUploader from \"../controls/CSVFileUploader\";\nimport \"../css/Styles.css\";\nimport ProductService from \"../services/Product\";\nimport { confirmWithSingleButton } from \"../controls/Confirmation\";\nimport ErrorModel from \"../models/Error\";\nimport ProductModel from \"../models/Product\";\nimport Product from \"./Product\";\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    getProducts();\n  }, []);\n  const [products, setProducts] = useState<ProductModel[]>([]);\n  async function getProducts() {\n    const retrievedProducts = await ProductService.getAll();\n    setProducts(retrievedProducts);\n  }\n  async function handleUpload(someJson: unknown) {\n    const products = await ProductService.add(someJson);\n    if (products instanceof ErrorModel) {\n      confirmWithSingleButton(\"Ok\", \"Error\", products.ErrorMessage);\n    } else {\n      confirmWithSingleButton(\"Ok\", \"Success\", \"File Uploaded Successfully!\");\n      getProducts();\n    }\n  }\n  return (\n    <div>\n      <CSVFileUploader fileUploadCallBack={handleUpload} />\n      {products.map((eachProduct) => {\n        return <Product product={eachProduct} />;\n      })}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}